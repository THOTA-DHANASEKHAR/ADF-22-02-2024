{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name"
		},
		"AzureDataLakeStorage1": {
			"type": "string"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/count records in file')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Until1",
						"type": "Until",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@variables('i')",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Lookup1",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings",
												"skipLineCount": {
													"value": "@variables('totalcount')",
													"type": "Expression"
												}
											}
										},
										"dataset": {
											"referenceName": "count_recods",
											"type": "DatasetReference"
										},
										"firstRowOnly": false
									}
								},
								{
									"name": "temp",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "count",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "temp",
										"value": {
											"value": "@add(variables('count'),variables('totalcount'))",
											"type": "Expression"
										}
									}
								},
								{
									"name": "If Condition1",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "temp",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@less(variables('count'),5000)",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "totalcount1",
												"type": "SetVariable",
												"dependsOn": [],
												"policy": {
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"variableName": "totalcount",
													"value": {
														"value": "@variables('temp')",
														"type": "Expression"
													}
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "stop",
												"type": "SetVariable",
												"dependsOn": [
													{
														"activity": "totalcount",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"variableName": "i",
													"value": true
												}
											},
											{
												"name": "totalcount",
												"type": "SetVariable",
												"dependsOn": [],
												"policy": {
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"variableName": "totalcount",
													"value": {
														"value": "@variables('temp')",
														"type": "Expression"
													}
												}
											}
										]
									}
								},
								{
									"name": "count",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Lookup1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "count",
										"value": {
											"value": "@activity('Lookup1').output.count",
											"type": "Expression"
										}
									}
								}
							],
							"timeout": "0.12:00:00"
						}
					},
					{
						"name": "final count",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Until1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "final count",
							"value": {
								"value": "@variables('totalcount')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "last count value",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "final count",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "lastcountvalue",
							"value": {
								"value": "@variables('count')",
								"type": "Expression"
							}
						}
					}
				],
				"variables": {
					"i": {
						"type": "Boolean",
						"defaultValue": false
					},
					"totalcount": {
						"type": "Integer",
						"defaultValue": 0
					},
					"temp": {
						"type": "Integer",
						"defaultValue": 0
					},
					"count": {
						"type": "Integer",
						"defaultValue": 0
					},
					"final count": {
						"type": "Integer",
						"defaultValue": 0
					},
					"lastcountvalue": {
						"type": "Integer"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/count_recods')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/count_recods')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('AzureDataLakeStorage1')]",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "13000 Sales Records.csv",
						"fileSystem": "landing"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Product type",
						"type": "String"
					},
					{
						"name": "SKU",
						"type": "String"
					},
					{
						"name": "Price",
						"type": "String"
					},
					{
						"name": "Availability",
						"type": "String"
					},
					{
						"name": "Number of products sold",
						"type": "String"
					},
					{
						"name": "Revenue generated",
						"type": "String"
					},
					{
						"name": "Customer demographics",
						"type": "String"
					},
					{
						"name": "Stock levels",
						"type": "String"
					},
					{
						"name": "Lead times",
						"type": "String"
					},
					{
						"name": "Order quantities",
						"type": "String"
					},
					{
						"name": "Shipping times",
						"type": "String"
					},
					{
						"name": "Shipping carriers",
						"type": "String"
					},
					{
						"name": "Shipping costs",
						"type": "String"
					},
					{
						"name": "Supplier name",
						"type": "String"
					},
					{
						"name": "Location",
						"type": "String"
					},
					{
						"name": "Lead time",
						"type": "String"
					},
					{
						"name": "Production volumes",
						"type": "String"
					},
					{
						"name": "Manufacturing lead time",
						"type": "String"
					},
					{
						"name": "Manufacturing costs",
						"type": "String"
					},
					{
						"name": "Inspection results",
						"type": "String"
					},
					{
						"name": "Defect rates",
						"type": "String"
					},
					{
						"name": "Transportation modes",
						"type": "String"
					},
					{
						"name": "Routes",
						"type": "String"
					},
					{
						"name": "Costs",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		}
	]
}